name: Pipeline

on:
  push:
    branches: [ dev ]
env:
  APPLICATION_NAME: startupapp

jobs:
  build_image_push_to_ECR:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install GLIBC
      run: |
        sudo apt-get update && sudo apt-get install -y libc6

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'  


    # see: https://github.com/aws-actions/amazon-ecr-login
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  submit_training_job:
    needs: [build_image_push_to_ECR]
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-py3:latest
    steps:
    - uses: actions/checkout@v2
    - name: Fire SageMaker
      id: sm_train
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PREFIX: ${{ secrets.PREFIX }}
        IAM_ROLE_NAME: ${{ secrets.IAM_ROLE_NAME }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        pip install --no-cache-dir --upgrade awscli pandas boto3 sagemaker requests fsspec s3fs tabulate
        python training-job.py

        # Create a markdown file with the training job details
        echo "Training Job Submission Report" > report.md
        echo "Training Job name: '$(cat training_job_name.txt)'" >> report.md
        echo "Model Artifacts Location: 's3://$BUCKET_NAME/$PREFIX/output/$(cat training_job_name.txt)/model.tar.gz'" >> report.md
        echo "Model hyperparameters: $(cat hyperparameters.txt)" >> report.md
        
        cat details.txt >> report.md
        cml-send-comment report.md 
